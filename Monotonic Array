An array is monotonic if it is either monotone increasing or monotone decreasing.

An array nums is monotone increasing if for all i <= j, nums[i] <= nums[j].
An array nums is monotone decreasing if for all i <= j, nums[i] >= nums[j].

Given an integer array nums, return true if the given array is monotonic, or false otherwise.

Example 1:

Input: nums = [1,2,2,3]
Output: true
Example 2:

Input: nums = [6,5,4,4]
Output: true
Example 3:

Input: nums = [1,3,2]
Output: false
 

class Solution {
    public boolean isMonotonic(int[] nums) {
        int n = nums.length;
        boolean isMonotonic = false;

        int i;
        // for input array like nums[i] <= nums[j] e.g [1,2,3,4];
        for(i = 0; i < n-1; i++){
            if(nums[i] <= nums[i+1]){
                 continue;
            }
            else{
                break;
            }
        }
       
        if(i == n-1){
            return true;
        }
        // for case 1 3 2 it'll  return true if we don't check our i got complete traversal
        // cuz it'll firstly enter into 1st for loop it got satisfy some condition 
        // when it had some obstackle it'll further move for 2nd loop and make remaining 
        // cond. satisfy itself, so we have make sure that our i got complete traverse 
        // within one loop in case of 
        // 1. nums[i] <= nums[j]  2. nums[i] >= nums[j];

        // for input array like nums[i] >= nums[j] e.g [4,3,2,1];
        for(i = 0; i < n-1; i++){
            if(nums[i] >= nums[i+1]){
                continue;
            }
            else{
                break;
            }  
        }
        // if i got complete traversal let's return true;
        
        if(i == n-1){
            return true;
        }

        return  isMonotonic;
    }
}
